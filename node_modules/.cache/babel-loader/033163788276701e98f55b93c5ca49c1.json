{"ast":null,"code":"import _defineProperty from\"/home/nacon-007/Desktop/Jyoti/React js/commercetool/loginforms/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/home/nacon-007/Desktop/Jyoti/React js/commercetool/loginforms/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/nacon-007/Desktop/Jyoti/React js/commercetool/loginforms/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import\"./LoginForm.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginForm=function LoginForm(props){var _useState=useState({email:\"\",password:\"\",confirmPassword:\"\"}),_useState2=_slicedToArray(_useState,2),form=_useState2[0],setForm=_useState2[1];var onUpdateField=function onUpdateField(e){var nextFormState=_objectSpread(_objectSpread({},form),{},_defineProperty({},e.target.name,e.target.value));setForm(nextFormState);};var onSubmitForm=function onSubmitForm(e){e.preventDefault();alert(JSON.stringify(form,null,2));};var url=\"https://reactjs.org/docs/hooks-custom.html\";return/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:onSubmitForm,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"formGroup\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{className:\"formField\",type:\"text\",\"aria-label\":\"Email field\",name:\"email\",value:form.email,onChange:onUpdateField})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"formGroup\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{className:\"formField\",type:\"password\",\"aria-label\":\"Password field\",name:\"password\",value:form.password,onChange:onUpdateField})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"formGroup\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{className:\"formField\",type:\"password\",\"aria-label\":\"Confirm password field\",name:\"confirmPassword\",value:form.confirmPassword,onChange:onUpdateField})]}),/*#__PURE__*/_jsx(\"a\",{formActions:true,href:url,children:\" signup\"}),/*#__PURE__*/_jsx(\"div\",{className:\"formActions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"formSubmitBtn\",type:\"submit\",children:\"Login\"})})]});};export default LoginForm;// import clsx from \"clsx\";\n// import { useLoginFormValidator } from \"./hooks/useLoginFormValidator\";\n// const LoginForm = props => {\n//   const [form, setForm] = useState({\n//     email: \"\",\n//     password: \"\",\n//     confirmPassword: \"\",\n//   });\n//   const { errors, validateForm, onBlurField } = useLoginFormValidator(form);\n//   const onUpdateField = e => {\n//     const field = e.target.name;\n//     const nextFormState = {\n//       ...form,\n//       [field]: e.target.value,\n//     };\n//     setForm(nextFormState);\n//     if (errors[field].dirty)\n//       validateForm({\n//         form: nextFormState,\n//         errors,\n//         field,\n//       });\n//   };\n//   const onSubmitForm = e => {\n//     e.preventDefault();\n//     const { isValid } = validateForm({ form, errors, forceTouchErrors: true });\n//     if (!isValid) return;\n//     alert(JSON.stringify(form, null, 2));\n//   };\n//   return (\n//     <form className=\"form\" onSubmit={onSubmitForm}>\n//       <div className=\"formGroup\">\n//         <label className=\"formLabel\">Email</label>\n//         <input\n//           className={clsx(\n//             \"formField\",\n//             errors.email.dirty && errors.email.error && \"formFieldError\"\n//           )}\n//           type=\"text\"\n//           aria-label=\"Email field\"\n//           name=\"email\"\n//           value={form.email}\n//           onChange={onUpdateField}\n//           onBlur={onBlurField}\n//         />\n//         {errors.email.dirty && errors.email.error ? (\n//           <p className=\"formFieldErrorMessage\">{errors.email.message}</p>\n//         ) : null}\n//       </div>\n//       <div className=\"formGroup\">\n//         <label className=\"formLabel\">Password</label>\n//         <input\n//           className={clsx(\n//             \"formField\",\n//             errors.password.dirty &&\n//               errors.password.error &&\n//               \"formFieldError\"\n//           )}\n//           type=\"password\"\n//           aria-label=\"Password field\"\n//           name=\"password\"\n//           value={form.password}\n//           onChange={onUpdateField}\n//           onBlur={onBlurField}\n//         />\n//         {errors.password.dirty && errors.password.error ? (\n//           <p className=\"formFieldErrorMessage\">\n//             {errors.password.message}\n//           </p>\n//         ) : null}\n//       </div>\n//       <div className=\"formGroup\">\n//         <label className=\"formLabel\">Confirm Password</label>\n//         <input\n//           className={clsx(\n//             \"formField\",\n//             errors.confirmPassword.dirty &&\n//               errors.confirmPassword.error &&\n//               \"formFieldError\"\n//           )}\n//           type=\"password\"\n//           aria-label=\"Confirm password field\"\n//           name=\"confirmPassword\"\n//           value={form.confirmPassword}\n//           onChange={onUpdateField}\n//           onBlur={onBlurField}\n//         />\n//         {errors.confirmPassword.dirty && errors.confirmPassword.error ? (\n//           <p className=\"formFieldErrorMessage\">\n//             {errors.confirmPassword.message}\n//           </p>\n//         ) : null}\n//       </div>\n//       <div className=\"formActions\">\n//         <button className=\"formSubmitBtn\" type=\"submit\">\n//           Login\n//         </button>\n//       </div>\n//     </form>\n//   );\n// };\n// export default LoginForm;","map":{"version":3,"names":["useState","LoginForm","props","email","password","confirmPassword","form","setForm","onUpdateField","e","nextFormState","target","name","value","onSubmitForm","preventDefault","alert","JSON","stringify","url"],"sources":["/home/nacon-007/Desktop/Jyoti/React js/commercetool/loginforms/src/Component1/loginForm/LoginForm.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./LoginForm.css\";\n\nconst LoginForm = props => {\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const onUpdateField = e => {\n    const nextFormState = {\n      ...form,\n      [e.target.name]: e.target.value,\n    };\n    setForm(nextFormState);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    alert(JSON.stringify(form, null, 2));\n  };\n  let url=\"https://reactjs.org/docs/hooks-custom.html\";\n  return (\n    <form className=\"form\" onSubmit={onSubmitForm}>\n      <div className=\"formGroup\">\n        <label className=\"formLabel\">Email</label>\n        <input\n          className=\"formField\"\n          type=\"text\"\n          aria-label=\"Email field\"\n          name=\"email\"\n          value={form.email}\n          onChange={onUpdateField}\n        />\n      </div>\n      <div className=\"formGroup\">\n        <label className=\"formLabel\">Password</label>\n        <input\n          className=\"formField\"\n          type=\"password\"\n          aria-label=\"Password field\"\n          name=\"password\"\n          value={form.password}\n          onChange={onUpdateField}\n        />\n      </div>\n      <div className=\"formGroup\">\n        <label className=\"formLabel\">Confirm Password</label>\n        <input\n          className=\"formField\"\n          type=\"password\"\n          aria-label=\"Confirm password field\"\n          name=\"confirmPassword\"\n          value={form.confirmPassword}\n          onChange={onUpdateField}\n        />\n      </div>\n      <a  formActions href={url}> signup</a>\n      <div className=\"formActions\">\n        <button className=\"formSubmitBtn\" type=\"submit\">\n          Login\n        </button>\n      \n      </div>\n    </form>\n  );\n};\n\nexport default LoginForm;\n\n// import clsx from \"clsx\";\n\n// import { useLoginFormValidator } from \"./hooks/useLoginFormValidator\";\n\n// const LoginForm = props => {\n//   const [form, setForm] = useState({\n//     email: \"\",\n//     password: \"\",\n//     confirmPassword: \"\",\n//   });\n  \n//   const { errors, validateForm, onBlurField } = useLoginFormValidator(form);\n\n//   const onUpdateField = e => {\n//     const field = e.target.name;\n//     const nextFormState = {\n//       ...form,\n//       [field]: e.target.value,\n//     };\n//     setForm(nextFormState);\n//     if (errors[field].dirty)\n//       validateForm({\n//         form: nextFormState,\n//         errors,\n//         field,\n//       });\n//   };\n\n//   const onSubmitForm = e => {\n//     e.preventDefault();\n//     const { isValid } = validateForm({ form, errors, forceTouchErrors: true });\n//     if (!isValid) return;\n//     alert(JSON.stringify(form, null, 2));\n//   };\n\n//   return (\n//     <form className=\"form\" onSubmit={onSubmitForm}>\n//       <div className=\"formGroup\">\n//         <label className=\"formLabel\">Email</label>\n//         <input\n//           className={clsx(\n//             \"formField\",\n//             errors.email.dirty && errors.email.error && \"formFieldError\"\n//           )}\n//           type=\"text\"\n//           aria-label=\"Email field\"\n//           name=\"email\"\n//           value={form.email}\n//           onChange={onUpdateField}\n//           onBlur={onBlurField}\n//         />\n//         {errors.email.dirty && errors.email.error ? (\n//           <p className=\"formFieldErrorMessage\">{errors.email.message}</p>\n//         ) : null}\n//       </div>\n//       <div className=\"formGroup\">\n//         <label className=\"formLabel\">Password</label>\n//         <input\n//           className={clsx(\n//             \"formField\",\n//             errors.password.dirty &&\n//               errors.password.error &&\n//               \"formFieldError\"\n//           )}\n//           type=\"password\"\n//           aria-label=\"Password field\"\n//           name=\"password\"\n//           value={form.password}\n//           onChange={onUpdateField}\n//           onBlur={onBlurField}\n//         />\n//         {errors.password.dirty && errors.password.error ? (\n//           <p className=\"formFieldErrorMessage\">\n//             {errors.password.message}\n//           </p>\n//         ) : null}\n//       </div>\n//       <div className=\"formGroup\">\n//         <label className=\"formLabel\">Confirm Password</label>\n//         <input\n//           className={clsx(\n//             \"formField\",\n//             errors.confirmPassword.dirty &&\n//               errors.confirmPassword.error &&\n//               \"formFieldError\"\n//           )}\n//           type=\"password\"\n//           aria-label=\"Confirm password field\"\n//           name=\"confirmPassword\"\n//           value={form.confirmPassword}\n//           onChange={onUpdateField}\n//           onBlur={onBlurField}\n//         />\n//         {errors.confirmPassword.dirty && errors.confirmPassword.error ? (\n//           <p className=\"formFieldErrorMessage\">\n//             {errors.confirmPassword.message}\n//           </p>\n//         ) : null}\n//       </div>\n//       <div className=\"formActions\">\n//         <button className=\"formSubmitBtn\" type=\"submit\">\n//           Login\n//         </button>\n//       </div>\n//     </form>\n//   );\n// };\n\n// export default LoginForm;\n"],"mappings":"6bAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,iBAAiB,CAAC,wFAEzB,GAAMC,UAAS,CAAG,QAAZA,UAAS,CAAGC,KAAK,CAAI,CACzB,cAAwBF,QAAQ,CAAC,CAC/BG,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,EAAE,CACZC,eAAe,CAAE,EACnB,CAAC,CAAC,wCAJKC,IAAI,eAAEC,OAAO,eAMpB,GAAMC,cAAa,CAAG,QAAhBA,cAAa,CAAGC,CAAC,CAAI,CACzB,GAAMC,cAAa,gCACdJ,IAAI,wBACNG,CAAC,CAACE,MAAM,CAACC,IAAI,CAAGH,CAAC,CAACE,MAAM,CAACE,KAAK,EAChC,CACDN,OAAO,CAACG,aAAa,CAAC,CACxB,CAAC,CAED,GAAMI,aAAY,CAAG,QAAfA,aAAY,CAAGL,CAAC,CAAI,CACxBA,CAAC,CAACM,cAAc,EAAE,CAClBC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACZ,IAAI,CAAE,IAAI,CAAE,CAAC,CAAC,CAAC,CACtC,CAAC,CACD,GAAIa,IAAG,CAAC,4CAA4C,CACpD,mBACE,cAAM,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAEL,YAAa,wBAC5C,aAAK,SAAS,CAAC,WAAW,wBACxB,cAAO,SAAS,CAAC,WAAW,mBAAc,cAC1C,cACE,SAAS,CAAC,WAAW,CACrB,IAAI,CAAC,MAAM,CACX,aAAW,aAAa,CACxB,IAAI,CAAC,OAAO,CACZ,KAAK,CAAER,IAAI,CAACH,KAAM,CAClB,QAAQ,CAAEK,aAAc,EACxB,GACE,cACN,aAAK,SAAS,CAAC,WAAW,wBACxB,cAAO,SAAS,CAAC,WAAW,sBAAiB,cAC7C,cACE,SAAS,CAAC,WAAW,CACrB,IAAI,CAAC,UAAU,CACf,aAAW,gBAAgB,CAC3B,IAAI,CAAC,UAAU,CACf,KAAK,CAAEF,IAAI,CAACF,QAAS,CACrB,QAAQ,CAAEI,aAAc,EACxB,GACE,cACN,aAAK,SAAS,CAAC,WAAW,wBACxB,cAAO,SAAS,CAAC,WAAW,8BAAyB,cACrD,cACE,SAAS,CAAC,WAAW,CACrB,IAAI,CAAC,UAAU,CACf,aAAW,wBAAwB,CACnC,IAAI,CAAC,iBAAiB,CACtB,KAAK,CAAEF,IAAI,CAACD,eAAgB,CAC5B,QAAQ,CAAEG,aAAc,EACxB,GACE,cACN,UAAI,WAAW,MAAC,IAAI,CAAEW,GAAI,qBAAY,cACtC,YAAK,SAAS,CAAC,aAAa,uBAC1B,eAAQ,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,mBAEtC,EAEL,GACD,CAEX,CAAC,CAED,cAAelB,UAAS,CAEx},"metadata":{},"sourceType":"module"}