{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { emailValidator, passwordValidator, confirmPasswordValidator } from \"../validators.js\";\nconst touchErrors = errors => {\n  return Object.entries(errors).reduce((acc, _ref) => {\n    let [field, fieldError] = _ref;\n    acc[field] = {\n      ...fieldError,\n      dirty: true\n    };\n    return acc;\n  }, {});\n};\nexport const useLoginFormValidator = form => {\n  _s();\n  const [errors, setErrors] = useState({\n    email: {\n      dirty: false,\n      error: false,\n      message: \"\"\n    },\n    password: {\n      dirty: false,\n      error: false,\n      message: \"\"\n    },\n    confirmPassword: {\n      dirty: false,\n      error: false,\n      message: \"\"\n    }\n  });\n  const validateForm = _ref2 => {\n    let {\n      form,\n      field,\n      errors,\n      forceTouchErrors = false\n    } = _ref2;\n    let isValid = true;\n\n    // Create a deep copy of the errors\n    const nextErrors = JSON.parse(JSON.stringify(errors));\n\n    // Force validate all the fields\n    if (forceTouchErrors) {\n      nextErrors = touchErrors(errors);\n    }\n    const {\n      email,\n      password,\n      confirmPassword\n    } = form;\n    if (nextErrors.email.dirty && (field ? field === \"email\" : true)) {\n      const emailMessage = emailValidator(email, form);\n      nextErrors.email.error = !!emailMessage;\n      nextErrors.email.message = emailMessage;\n      if (!!emailMessage) isValid = false;\n    }\n    if (nextErrors.password.dirty && (field ? field === \"password\" : true)) {\n      const passwordMessage = passwordValidator(password, form);\n      nextErrors.password.error = !!passwordMessage;\n      nextErrors.password.message = passwordMessage;\n      if (!!passwordMessage) isValid = false;\n    }\n    if (nextErrors.confirmPassword.dirty && (field ? field === \"confirmPassword\" : true)) {\n      const confirmPasswordMessage = confirmPasswordValidator(confirmPassword, form);\n      nextErrors.confirmPassword.error = !!confirmPasswordMessage;\n      nextErrors.confirmPassword.message = confirmPasswordMessage;\n      if (!!confirmPasswordMessage) isValid = false;\n    }\n    setErrors(nextErrors);\n    return {\n      isValid,\n      errors: nextErrors\n    };\n  };\n  const onBlurField = e => {\n    const field = e.target.name;\n    const fieldError = errors[field];\n    if (fieldError.dirty) return;\n    const updatedErrors = {\n      ...errors,\n      [field]: {\n        ...errors[field],\n        dirty: true\n      }\n    };\n    validateForm({\n      form,\n      field,\n      errors: updatedErrors\n    });\n  };\n  return {\n    validateForm,\n    onBlurField,\n    errors\n  };\n};\n_s(useLoginFormValidator, \"TsjyrN+jAu7AULbOvE8iDHfl0Oo=\");","map":{"version":3,"names":["useState","emailValidator","passwordValidator","confirmPasswordValidator","touchErrors","errors","Object","entries","reduce","acc","field","fieldError","dirty","useLoginFormValidator","form","setErrors","email","error","message","password","confirmPassword","validateForm","forceTouchErrors","isValid","nextErrors","JSON","parse","stringify","emailMessage","passwordMessage","confirmPasswordMessage","onBlurField","e","target","name","updatedErrors"],"sources":["/home/nacon-007/Desktop/Jyoti/React js/commercetool/loginforms/src/Component1/loginForm/hooks/useLoginFormValidator.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport {\n  emailValidator,\n  passwordValidator,\n  confirmPasswordValidator,\n} from \"../validators.js\";\n\nconst touchErrors = errors => {\n  return Object.entries(errors).reduce((acc, [field, fieldError]) => {\n    acc[field] = {\n      ...fieldError,\n      dirty: true,\n    };\n    return acc;\n  }, {});\n};\n\nexport const useLoginFormValidator = form => {\n  const [errors, setErrors] = useState({\n    email: {\n      dirty: false,\n      error: false,\n      message: \"\",\n    },\n    password: {\n      dirty: false,\n      error: false,\n      message: \"\",\n    },\n    confirmPassword: {\n      dirty: false,\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const validateForm = ({ form, field, errors, forceTouchErrors = false }) => {\n    let isValid = true;\n\n    // Create a deep copy of the errors\n    const nextErrors = JSON.parse(JSON.stringify(errors));\n\n    // Force validate all the fields\n    if (forceTouchErrors) {\n      nextErrors = touchErrors(errors);\n    }\n\n    const { email, password, confirmPassword } = form;\n\n    if (nextErrors.email.dirty && (field ? field === \"email\" : true)) {\n      const emailMessage = emailValidator(email, form);\n      nextErrors.email.error = !!emailMessage;\n      nextErrors.email.message = emailMessage;\n      if (!!emailMessage) isValid = false;\n    }\n\n    if (nextErrors.password.dirty && (field ? field === \"password\" : true)) {\n      const passwordMessage = passwordValidator(password, form);\n      nextErrors.password.error = !!passwordMessage;\n      nextErrors.password.message = passwordMessage;\n      if (!!passwordMessage) isValid = false;\n    }\n\n    if (\n      nextErrors.confirmPassword.dirty &&\n      (field ? field === \"confirmPassword\" : true)\n    ) {\n      const confirmPasswordMessage = confirmPasswordValidator(\n        confirmPassword,\n        form\n      );\n      nextErrors.confirmPassword.error = !!confirmPasswordMessage;\n      nextErrors.confirmPassword.message = confirmPasswordMessage;\n      if (!!confirmPasswordMessage) isValid = false;\n    }\n\n    setErrors(nextErrors);\n\n    return {\n      isValid,\n      errors: nextErrors,\n    };\n  };\n\n  const onBlurField = e => {\n    const field = e.target.name;\n    const fieldError = errors[field];\n    if (fieldError.dirty) return;\n\n    const updatedErrors = {\n      ...errors,\n      [field]: {\n        ...errors[field],\n        dirty: true,\n      },\n    };\n\n    validateForm({ form, field, errors: updatedErrors });\n  };\n\n  return {\n    validateForm,\n    onBlurField,\n    errors,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}