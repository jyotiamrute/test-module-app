{"ast":null,"code":"var _jsxFileName = \"/home/nacon-007/Desktop/Jyoti/React js/commercetool/loginforms/src/Component1/loginForm/LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./LoginForm.css\";\n\n// const LoginForm = props => {\n//   const [form, setForm] = useState({\n//     email: \"\",\n//     password: \"\",\n//     confirmPassword: \"\",\n//   });\n\n//   const onUpdateField = e => {\n//     const nextFormState = {\n//       ...form,\n//       [e.target.name]: e.target.value,\n//     };\n//     setForm(nextFormState);\n//   };\n\n//   const onSubmitForm = e => {\n//     e.preventDefault();\n//     alert(JSON.stringify(form, null, 2));\n//   };\n\n//   return (\n//     <form className=\"form\" onSubmit={onSubmitForm}>\n//       <div className=\"formGroup\">\n//         <label className=\"formLabel\">Email</label>\n//         <input\n//           className=\"formField\"\n//           type=\"text\"\n//           aria-label=\"Email field\"\n//           name=\"email\"\n//           value={form.email}\n//           onChange={onUpdateField}\n//         />\n//       </div>\n//       <div className=\"formGroup\">\n//         <label className=\"formLabel\">Password</label>\n//         <input\n//           className=\"formField\"\n//           type=\"password\"\n//           aria-label=\"Password field\"\n//           name=\"password\"\n//           value={form.password}\n//           onChange={onUpdateField}\n//         />\n//       </div>\n//       <div className=\"formGroup\">\n//         <label className=\"formLabel\">Confirm Password</label>\n//         <input\n//           className=\"formField\"\n//           type=\"password\"\n//           aria-label=\"Confirm password field\"\n//           name=\"confirmPassword\"\n//           value={form.confirmPassword}\n//           onChange={onUpdateField}\n//         />\n//       </div>\n//       <div className=\"formActions\">\n//         <button className=\"formSubmitBtn\" type=\"submit\">\n//           Login\n//         </button>\n//       </div>\n//     </form>\n//   );\n// };\n\n// export default LoginForm;\n\nimport clsx from \"clsx\";\nimport { useLoginFormValidator } from \"./hooks/useLoginFormValidator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = props => {\n  _s();\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    errors,\n    validateForm,\n    onBlurField\n  } = useLoginFormValidator(form);\n  const onUpdateField = e => {\n    const field = e.target.name;\n    const nextFormState = {\n      ...form,\n      [field]: e.target.value\n    };\n    setForm(nextFormState);\n    if (errors[field].dirty) validateForm({\n      form: nextFormState,\n      errors,\n      field\n    });\n  };\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const {\n      isValid\n    } = validateForm({\n      form,\n      errors,\n      forceTouchErrors: true\n    });\n    if (!isValid) return;\n    alert(JSON.stringify(form, null, 2));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: onSubmitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formGroup\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"formLabel\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: clsx(styles.formField, errors.email.dirty && errors.email.error && \"formFieldError\"),\n        type: \"text\",\n        \"aria-label\": \"Email field\",\n        name: \"email\",\n        value: form.email,\n        onChange: onUpdateField,\n        onBlur: onBlurField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), errors.email.dirty && errors.email.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"formFieldErrorMessage\",\n        children: errors.email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formGroup\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"formLabel\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: clsx(\"formField\", errors.password.dirty && errors.password.error && \"formFieldError\"),\n        type: \"password\",\n        \"aria-label\": \"Password field\",\n        name: \"password\",\n        value: form.password,\n        onChange: onUpdateField,\n        onBlur: onBlurField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), errors.password.dirty && errors.password.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"formFieldErrorMessage\",\n        children: errors.password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formGroup\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"formLabel\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: clsx(\"formField\", errors.confirmPassword.dirty && errors.confirmPassword.error && \"formFieldError\"),\n        type: \"password\",\n        \"aria-label\": \"Confirm password field\",\n        name: \"confirmPassword\",\n        value: form.confirmPassword,\n        onChange: onUpdateField,\n        onBlur: onBlurField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), errors.confirmPassword.dirty && errors.confirmPassword.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"formFieldErrorMessage\",\n        children: errors.confirmPassword.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formActions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"formSubmitBtn\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"ehgFl1kxySH6YJy18p0yyK5/Koo=\", false, function () {\n  return [useLoginFormValidator];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useState","clsx","useLoginFormValidator","LoginForm","props","form","setForm","email","password","confirmPassword","errors","validateForm","onBlurField","onUpdateField","e","field","target","name","nextFormState","value","dirty","onSubmitForm","preventDefault","isValid","forceTouchErrors","alert","JSON","stringify","styles","formField","error","message"],"sources":["/home/nacon-007/Desktop/Jyoti/React js/commercetool/loginforms/src/Component1/loginForm/LoginForm.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./LoginForm.css\";\n\n// const LoginForm = props => {\n//   const [form, setForm] = useState({\n//     email: \"\",\n//     password: \"\",\n//     confirmPassword: \"\",\n//   });\n\n//   const onUpdateField = e => {\n//     const nextFormState = {\n//       ...form,\n//       [e.target.name]: e.target.value,\n//     };\n//     setForm(nextFormState);\n//   };\n\n//   const onSubmitForm = e => {\n//     e.preventDefault();\n//     alert(JSON.stringify(form, null, 2));\n//   };\n\n//   return (\n//     <form className=\"form\" onSubmit={onSubmitForm}>\n//       <div className=\"formGroup\">\n//         <label className=\"formLabel\">Email</label>\n//         <input\n//           className=\"formField\"\n//           type=\"text\"\n//           aria-label=\"Email field\"\n//           name=\"email\"\n//           value={form.email}\n//           onChange={onUpdateField}\n//         />\n//       </div>\n//       <div className=\"formGroup\">\n//         <label className=\"formLabel\">Password</label>\n//         <input\n//           className=\"formField\"\n//           type=\"password\"\n//           aria-label=\"Password field\"\n//           name=\"password\"\n//           value={form.password}\n//           onChange={onUpdateField}\n//         />\n//       </div>\n//       <div className=\"formGroup\">\n//         <label className=\"formLabel\">Confirm Password</label>\n//         <input\n//           className=\"formField\"\n//           type=\"password\"\n//           aria-label=\"Confirm password field\"\n//           name=\"confirmPassword\"\n//           value={form.confirmPassword}\n//           onChange={onUpdateField}\n//         />\n//       </div>\n//       <div className=\"formActions\">\n//         <button className=\"formSubmitBtn\" type=\"submit\">\n//           Login\n//         </button>\n//       </div>\n//     </form>\n//   );\n// };\n\n// export default LoginForm;\n\nimport clsx from \"clsx\";\n\nimport { useLoginFormValidator } from \"./hooks/useLoginFormValidator\";\n\nconst LoginForm = props => {\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  \n  const { errors, validateForm, onBlurField } = useLoginFormValidator(form);\n\n  const onUpdateField = e => {\n    const field = e.target.name;\n    const nextFormState = {\n      ...form,\n      [field]: e.target.value,\n    };\n    setForm(nextFormState);\n    if (errors[field].dirty)\n      validateForm({\n        form: nextFormState,\n        errors,\n        field,\n      });\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const { isValid } = validateForm({ form, errors, forceTouchErrors: true });\n    if (!isValid) return;\n    alert(JSON.stringify(form, null, 2));\n  };\n\n  return (\n    <form className={styles.form} onSubmit={onSubmitForm}>\n      <div className=\"formGroup\">\n        <label className=\"formLabel\">Email</label>\n        <input\n          className={clsx(\n            styles.formField,\n            errors.email.dirty && errors.email.error && \"formFieldError\"\n          )}\n          type=\"text\"\n          aria-label=\"Email field\"\n          name=\"email\"\n          value={form.email}\n          onChange={onUpdateField}\n          onBlur={onBlurField}\n        />\n        {errors.email.dirty && errors.email.error ? (\n          <p className=\"formFieldErrorMessage\">{errors.email.message}</p>\n        ) : null}\n      </div>\n      <div className=\"formGroup\">\n        <label className=\"formLabel\">Password</label>\n        <input\n          className={clsx(\n            \"formField\",\n            errors.password.dirty &&\n              errors.password.error &&\n              \"formFieldError\"\n          )}\n          type=\"password\"\n          aria-label=\"Password field\"\n          name=\"password\"\n          value={form.password}\n          onChange={onUpdateField}\n          onBlur={onBlurField}\n        />\n        {errors.password.dirty && errors.password.error ? (\n          <p className=\"formFieldErrorMessage\">\n            {errors.password.message}\n          </p>\n        ) : null}\n      </div>\n      <div className=\"formGroup\">\n        <label className=\"formLabel\">Confirm Password</label>\n        <input\n          className={clsx(\n            \"formField\",\n            errors.confirmPassword.dirty &&\n              errors.confirmPassword.error &&\n              \"formFieldError\"\n          )}\n          type=\"password\"\n          aria-label=\"Confirm password field\"\n          name=\"confirmPassword\"\n          value={form.confirmPassword}\n          onChange={onUpdateField}\n          onBlur={onBlurField}\n        />\n        {errors.confirmPassword.dirty && errors.confirmPassword.error ? (\n          <p className=\"formFieldErrorMessage\">\n            {errors.confirmPassword.message}\n          </p>\n        ) : null}\n      </div>\n      <div className=\"formActions\">\n        <button className=\"formSubmitBtn\" type=\"submit\">\n          Login\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}